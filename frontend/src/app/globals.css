@import 'tailwindcss';

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-tertiary: hsla(var(--tertiary));

  --color-primary: hsla(var(--primary));
  --color-primary-foreground: var(--primary-foreground);
  --color-primary-rotated: hsla(var(--primary-rotated));

  --color-secondary: hsla(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-progress-indeterminate: progress-indeterminate 1.5s infinite linear;

  --font-heading: var(--font-heading), sans-serif;
  --font-text: var(--font-text), sans-serif;
  --font-number: var(--font-number), sans-serif;

  @keyframes progress-indeterminate {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@utility p-safe {
  padding: env(safe-area-inset-top) env(safe-area-inset-right)
    env(safe-area-inset-bottom) env(safe-area-inset-left);
}

@utility px-safe {
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

@utility py-safe {
  padding-top: env(safe-area-inset-top);
  padding-bottom: env(safe-area-inset-bottom);
}

@utility pt-safe {
  padding-top: env(safe-area-inset-top);
}

@utility pr-safe {
  padding-right: env(safe-area-inset-right);
}

@utility pb-safe {
  padding-bottom: env(safe-area-inset-bottom);
}

@utility pl-safe {
  padding-left: env(safe-area-inset-right);
}

@utility m-safe {
  margin: env(safe-area-inset-top) env(safe-area-inset-right)
    env(safe-area-inset-bottom) env(safe-area-inset-left);
}

@utility mx-safe {
  margin-left: env(safe-area-inset-left);
  margin-right: env(safe-area-inset-right);
}

@utility my-safe {
  margin-top: env(safe-area-inset-top);
  margin-bottom: env(safe-area-inset-bottom);
}

@utility mt-safe {
  margin-top: env(safe-area-inset-top);
}

@utility mr-safe {
  margin-right: env(safe-area-inset-right);
}

@utility mb-safe {
  margin-bottom: env(safe-area-inset-bottom);
}

@utility ml-safe {
  margin-left: env(safe-area-inset-right);
}

@utility top-safe {
  top: 0;
  top: env(safe-area-inset-top);
}

@utility right-safe {
  right: 0;
  right: env(safe-area-inset-right);
}

@utility bottom-safe {
  bottom: 0;
  bottom: env(safe-area-inset-bottom);
}

@utility left-safe {
  left: 0;
  left: env(safe-area-inset-right);
}

@utility scrollbar-thin {
  scrollbar-width: thin;
  scrollbar-color: hsl(var(--muted-foreground));

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: #edf2f7;
  }

  &::-webkit-scrollbar-thumb {
    background-color: hsl(var(--muted-foreground));
    border-radius: 4px;
    border: 2px solid #edf2f7;
  }
}

@layer utilities {
  body {
    font-family: Arial, Helvetica, sans-serif;
  }
}

@layer base {
  :root {
    --hue:210;
    transition: --hue 0.5s linear;
  }
  .hue-filter {
    filter: hue-rotate(var(--hue)deg);
  }  
}

@layer utilities {
  .dark {
    --background: var(--hue) 10% 3.9%;
    --foreground: var(--hue) 10% 95%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --secondary: var(--hue) 13% 10%;
    --secondary-foreground: 0 0% 98%;
    --tertiary: var(--hue) 8.57% 6.86%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: var(--hue) 13% 13.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --radius: 0.5rem;
  }

  .light {
    --background: var(--hue) 27.27% 97.84%;
    --foreground: var(--hue) 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: var(--hue) 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: var(--hue) 10% 3.9%;
    --secondary: var(--hue) 25.27% 92.9%;
    --secondary-foreground: var(--hue) 5.9% 10%;
    --tertiary: var(--hue) 22.27% 90.84%;
    --tertiary-foreground: var(--hue) 5.9% 10%;
    --dimmable: var(--hue) 47% 11%;
    --dimmable-foreground: var(--hue) 5.9% 10%;
    --muted: var(--hue) 4.8% 95.9%;
    --muted-foreground: var(--hue) 3.8% 46.1%;
    --muted-foreground-light: var(--hue) 3.8% 46.1%;
    --muted-foreground-dark: var(--hue) 5% 64.9%;
    --accent: var(--hue) 13% 86%;
    --accent-foreground: var(--hue) 5.9% 10%;
    --forever-dark: var(--hue) 13% 10%;
    --forever-dark-foreground: 0 0% 98%;
    --destructive: 0 76% 57%;
    --destructive-foreground: 0 0% 98%;
    --success: 127.2 44.25% 44.31%;
    --success-foreground: 0 0% 98%;
    --invert: 0 0% 0%;
    --border: var(--hue) 12% 70%;
    --input: var(--hue) 13% 86%;
    --ring: var(--hue) 10% 3.9%;
    --radius: 0.5rem;
    --ring: var(--primary);
  }
}


@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  button {
    @apply cursor-pointer
  }
}

@layer utilities {
  .bg-grid {
    inset: 0;
    position: absolute;
    z-index: -10;
    height: 100vh;
    width: 100%;
    background-size: 4rem 4rem;
    -webkit-mask-image: radial-gradient(
      ellipse 60% 50% at 50% 0%,
      hsl(var(--secondary)) 40%,
      transparent 120%
    );
    mask-image: radial-gradient(
      ellipse 60% 50% at 50% 0%,
      hsl(var(--secondary)) 40%,
      transparent 120%
    );
  }

  .light .bg-grid {
    background-image:
      linear-gradient(
        to right,
        hsl(var(--foreground) / 0.15) 1px,
        transparent 1px
      ),
      linear-gradient(hsl(var(--foreground) / 0.15) 1px, transparent 1px);
  }

  .dark .bg-grid {
    background-image:
      linear-gradient(
        to right,
        hsl(var(--foreground) / 0.1) 1px,
        transparent 1px
      ),
      linear-gradient(hsl(var(--foreground) / 0.1) 1px, transparent 1px);
  }

  .bot-view-hover:hover {
    background-color: rgba(var(--primary), 0.2);
  }

  .colour-picker .react-colorful {
    width: auto;
  }
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}